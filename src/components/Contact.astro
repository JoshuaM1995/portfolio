---
import "../styles/contact.scss";
import CircleIcon from "./CircleIcon.astro";
import ContactCard from "./ContactCard.astro";
import TitleUnderlined from "./TitleUnderlined.astro";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("name");
    const email = data.get("email");
    const subject = data.get("subject");
    const message = data.get("message");

    await fetch(
      `${
        import.meta.env.WEBSITE_URL
      }/api/send-email?name=${name}&email=${email}&subject=${subject}&message=${message}`
    );
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<section id="contact">
  <TitleUnderlined width={200}>Contact Me</TitleUnderlined>

  <div id="contact-container">
    <div id="contact-form-container" class="contact-inner">
      <h3 class="title">Say Hello</h3>

      <form id="contact-form" method="POST">
        <input name="name" type="text" placeholder="Your Name" required />
        <input name="email" type="email" placeholder="Your Email" required />
        <input name="subject" type="text" placeholder="Your Subject" required />
        <textarea name="message" placeholder="Your Message" rows={6} required
        ></textarea>
        <button>Send Message</button>
      </form>
    </div>

    <div id="contact-info" class="contact-inner">
      <h3 class="title">Contact Info</h3>
      <p>
        Want to get in touch? I'd love to hear from you. Here's my information
        so you can reach out.
      </p>

      <div id="contact-cards">
        <ContactCard
          icon="envelope"
          title="Email"
          lineOne="info@joshuamcnabb.ca"
        />
        <ContactCard icon="phone" title="Phone" lineOne="(780) 385-8977" />
        <ContactCard
          icon="location-dot"
          title="Address"
          lineOne="Calgary, Canada"
        />
      </div>

      <p class="visit-social-media">Visit my social media and get connected</p>

      <div class="social-icons">
        <a href="https://github.com/JoshuaM1995" target="_blank">
          <CircleIcon
            class="github"
            icon="github"
            iconVariant="brands"
            iconSize="md"
            text="Github"
          />
        </a>
        <a href="https://www.linkedin.com/in/jmcnabb1995/" target="_blank">
          <CircleIcon
            class="linkedin"
            icon="linkedin"
            iconVariant="brands"
            iconSize="md"
            text="LinkedIn"
          />
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  import anime from "animejs";

  let hasScrolledToContact = false;

  function isElementVisible(element: HTMLElement) {
    var rect = element.getBoundingClientRect();

    return (
      rect.top >= 0 &&
      rect.left >= 0 &&
      rect.bottom <=
        (window.innerHeight || document.documentElement.clientHeight) &&
      rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  }

  window.addEventListener("load", () => {
    if (isElementVisible(document.getElementById("contact"))) {
      if (!hasScrolledToContact) {
        animateContactSection();
      }

      hasScrolledToContact = true;

      document.getElementById("contact").classList.add("scrolled");
    }
  });

  window.addEventListener("scroll", () => {
    if (isElementVisible(document.getElementById("contact"))) {
      if (!hasScrolledToContact) {
        animateContactSection();
      }

      hasScrolledToContact = true;

      document.getElementById("contact").classList.add("scrolled");
    }
  });

  const animateContactSection = () => {
    anime({
      targets: "#contact .title-underlined",
      opacity: [0, 1],
      translateY: [-50, 0],
      duration: 500,
      easing: "linear",
    });

    anime({
      targets: "#contact #contact-form-container",
      opacity: [0, 1],
      translateX: [-50, 0],
      duration: 500,
      delay: 600,
      easing: "linear",
    });

    anime({
      targets: "#contact #contact-info",
      opacity: [0, 1],
      translateX: [50, 0],
      duration: 500,
      delay: 600,
      easing: "linear",
    });
  };
</script>
